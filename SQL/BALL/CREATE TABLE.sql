REATE SCHEMA "BALL";	-- Combined BALL, will have Sport specific schema for box/pbp

	-- SCD1
CREATE TABLE "BALL"."LEAGUE" (
  "LEAGUE_ID" smallint primary key,
  "ABBR" varchar(3),
  "NAME" varchar(50),
  "YR_ORIG" smallint,
  "YR_DATA" smallint,
  "SPORT" varchar(20),
  "WEATHER" bit		-- 1 outside, 0 indoor stadium
);

insert into "SPORT"."BALL"."LEAGUE" ("LEAGUE_ID", "ABBR", "NAME", "YR_ORIG", "SPORT", "WEATHER")
	  select 1, 'NBA', 'National Basketball Association', 1949, 'BASKET', '0'::bit
union select 2, 'NFL', 'National Football League', 1920, 'FOOT', '1'::bit
union select 3, 'NHL', 'National Hockey League', 1917, 'PUCK', '0'::bit
union select 4, 'MLB', 'Major League Baseball', 1869, 'BASE', '1'::bit
union select 5, 'CFB', 'College Football', 1869, 'FOOT', '1'::bit
union select 6, 'CBB', 'College Basketball', 1939, 'BASKET', '0'::bit;

	-- SCD1
CREATE TABLE "BALL"."TEAM" (
  "TEAM_ID" int primary KEY,		-- Manually created values since starting with LEAGUE_ID x 10000, grouped by conf/div
  "LEAGUE_ID" smallint NOT NULL,
  "ABBR" varchar(10) NOT NULL,
  "TEAM_CONCAT" varchar(20), --NBA_LAL
  "NAME" varchar(50),
  "LOCATION" varchar(50),		-- "CITY, ST" right 2 state used for Weather Averages Historically
  "CONF" varchar(20),		-- 1000 increment	-- 2 per League
  "DIV" varchar(20),		-- 100	Increment
  "LAT" decimal(8,6),
  "LON" decimal(9,6),
  "WEATHER" bit,	-- 0 = Dome
  "REGION_LAT" decimal(8,6),	-- Generalized Lat for less redundant weather api calls
  "REGION_LON" decimal(9,6)  	-- Generalized Lon for less redundant weather api calls
);

	-- SCD1
CREATE TABLE "BALL"."TEAM_NAME" (
  "LEAGUE_ID" smallint,
  "TEAM_ID" int,
  "NAME" varchar(100),
  "SOURCE" varchar(100),
  "INSERT_DT" timestamp not null default now()
);

	-- SCD1
CREATE TABLE "BALL"."SEASON" (
  "SEASON_ID" int GENERATED BY DEFAULT AS IDENTITY,		-- LEAGUE_ID x 100000 + YYYY, EX 402011 = MLB 2011, 100K to differentiate from TEAM_ID values at 10K
  "LEAGUE_ID" smallint NOT NULL,
  "YR_VAR" varchar(10) NOT NULL,
  "SEASON_CONCAT" varchar(20), --MLB_2024, NBA_23_24
  "PRE_DT" date,
  "REG_START_DT" date,
  "REG_END_DT" date,
  "POST_START_DT" date,
  "CHAMP_SERIES_START_DT" date,		-- Equal to CHAMP_DT for NFL, CHAMP_DT clinching game of 7 game series
  "CHAMP_DT" date,
  "YR" smallint,		-- Football has year as Reg season YR, all others YR as Champ Dt
  "INSERT_DT" timestamp not null default now()
);


CREATE TABLE "BALL"."SCHED" (
  "SCHED_ID" bigint GENERATED BY DEFAULT AS IDENTITY,
  "LEAGUE_ID" smallint NOT NULL,
  "SEASON_ID" int NOT NULL,
  "TEAM_ID" int NOT NULL,
  "GAME_NUM" smallint NOT NULL,
  "OPP_TEAM_ID" int NOT NULL,
  "SCHED_CONCAT" varchar, --NBA_23_24_LAL_###_OKC
  "GAME_DT" date,
  "HOME" bit,
  "WON" bit,
  "TEAM" smallint,	-- Points
  "OPP" smallint,
  "GAME_ID" bigint,	-- Filled in after Sched, ID backfilled  
  "INSERT_DT" timestamp not null default now()
);

CREATE TABLE "BALL"."GAME" (
  "GAME_ID" bigint GENERATED BY DEFAULT AS IDENTITY,
  "LEAGUE_ID" smallint NOT NULL,
  "HOME_TEAM_ID" int NOT NULL,
  "AWAY_TEAM_ID" int NOT NULL,
  "GAME_DT" date NOT NULL,
  "GAME_TIME" time,
  "GAME_CONCAT" varchar, --NBA_LAL_OKC_20241015	-- MLB double header?? "_2"
  "H" smallint,
  "A" smallint,
  "WON_TEAM_ID" int,
  "H1" smallint,  "A1" smallint,
  "H2" smallint,  "A2" smallint,
  "H3" smallint,  "A3" smallint,
  "H4" smallint,  "A4" smallint,
  "H5" smallint,  "A5" smallint,
  "H6" smallint,  "A6" smallint,
  "H7" smallint,  "A7" smallint,
  "H8" smallint,  "A8" smallint,
  "H9" smallint,  "A9" smallint,
  "H10" smallint, "A10" smallint,
  "INSERT_DT" timestamp not null default now(),
  "UPDATE_DT" timestamp,
  "SOURCE_GAME_ID" int
);



CREATE TABLE "BALL"."META" (
  "META_ID" bigint GENERATED BY DEFAULT AS IDENTITY,
  "META_TYPE" varchar(100),
  "META_KEY" varchar(100),
  "META_KEYID" bigint,		-- Used to join to GAME_ID, SCHED_ID
  "META_VALUE" varchar,
  "META_SOURCE" varchar(100),  
  "INSERT_DT" timestamp not null default now()
  );




-- Open Weather API:

-- Daily table for forecasts & sports that ain't played outside
-- Game Time table for historic usecase of results based on weather during game.

CREATE TABLE "BALL"."WEATHER_DAILY" (
  "WEATHER_DAILY_ID" bigint GENERATED BY DEFAULT AS IDENTITY,
  "INSERT_DT" timestamp not null default now(),
  "LAT" decimal(8,6) not null,
  "LON" decimal(9,6) not null,
  "DAILY_EPOCH" bigint not null,
  "DAILY_DT" date not null,	-- to_timestamp("DAILY_EPOCH")::date
  "NUM_DAYS_AHEAD" smallint not null, -- CURRENT_DATE - to_timestamp("DAILY_EPOCH")::date
  		-- For Historical will load in with -1 value ??
  "WEATHER_ID" smallint,    
  "TEMP_MIN" decimal(6,3),
  "TEMP_MAX" decimal(6,3),
  "TEMP_MORN" decimal(6,3),
  "TEMP_EVE" decimal(6,3),
  "WIND_SPEED" decimal(6,3),
  "SNOW_VOL_MM" decimal(6,3),
  "RAIN_VOL_MM" decimal(6,3)
);


CREATE TABLE "BALL"."WEATHER_AT_GAME" (
  "WEATHER_AT_GAME_ID" bigint GENERATED BY DEFAULT AS IDENTITY,
  "GAME_ID" bigint NOT NULL, 
  "GAME_EPOCH" bigint not null,
  "GAME_DT" date not null,
  "GAME_TIME" time not null,
  "WEATHER_ID" smallint,  
  "TEMP" decimal(6,3),
  "WIND_SPEED" decimal(6,3),
  "RAIN_MM_H" decimal(6,3),
  "SNOW_MM_H" decimal(6,3),
  "IS_HIST_AVG" bit default ('0'),
  "INSERT_DT" timestamp not null default now()
);

