CREATE SCHEMA ball;	-- Combined BALL, will have Sport specific schema for box/pbp

	-- SCD1
CREATE TABLE ball.league (
  league_id smallint primary key,
  abbr varchar(3),
  name varchar(50),
  yr_orig smallint,
  yr_data smallint,
  sport varchar(20),
  weather bit		-- 1 outside, 0 indoor stadium
);

insert into ball.league (league_id, abbr, name, yr_orig, sport, weather)
	  select 1, 'NBA', 'National Basketball Association', 1949, 'BASKET', '0'::bit
union select 2, 'NFL', 'National Football League', 1920, 'FOOT', '1'::bit
union select 3, 'NHL', 'National Hockey League', 1917, 'PUCK', '0'::bit
union select 4, 'MLB', 'Major League Baseball', 1869, 'BASE', '1'::bit
union select 5, 'CFB', 'College Football', 1869, 'FOOT', '1'::bit
union select 6, 'CBB', 'College Basketball', 1939, 'BASKET', '0'::bit;

	-- SCD1
CREATE TABLE ball.team (
  team_id int primary KEY,		-- Manually created values since starting with LEAGUE_ID x 10000, grouped by conf/div
  league_id smallint NOT NULL,
  abbr varchar(10) NOT NULL,
  team_concat varchar(20), --NBA_LAL
  name varchar(50),
  location varchar(50),		-- "CITY, ST" right 2 state used for Weather Averages Historically
  conf varchar(20),		-- 1000 increment	-- 2 per League
  div varchar(20),		-- 100	Increment
  lat decimal(8,6),
  lon decimal(9,6),
  weather smallint,	-- 0 = Dome
  region_lat decimal(8,6),	-- Generalized Lat for less redundant weather api calls
  region_lon decimal(9,6), 	-- Generalized Lon for less redundant weather api calls
  source_team_id int
);

	-- SCD1
CREATE TABLE ball.team_name (
  league_id smallint,
  team_id int,
  name varchar(100),
  source varchar(100),
  insert_dt timestamp not null default now()
);

	-- SCD1
CREATE TABLE ball.season (
  season_id int GENERATED BY DEFAULT AS IDENTITY,		-- LEAGUE_ID x 100000 + YYYY, EX 402011 = MLB 2011, 100K to differentiate from TEAM_ID values at 10K
  league_id smallint NOT NULL,
  yr_var varchar(10) NOT NULL,
  season_concat varchar(20), --MLB_2024, NBA_23_24
  pre_dt date,
  reg_start_dt date,
  reg_end_dt date,
  post_start_dt date,
  champ_series_start_dt date,		-- Equal to CHAMP_DT for NFL, CHAMP_DT clinching game of 7 game series
  champ_dt date,
  yr smallint,		-- Football has year as Reg season YR, all others YR as Champ Dt
  insert_dt timestamp not null default now()
);

CREATE TABLE ball.game (
  game_id bigint GENERATED BY DEFAULT AS IDENTITY,
  league_id smallint NOT NULL,
  home_team_id int NOT NULL,
  away_team_id int NOT NULL,
  game_dt date NOT NULL,
  game_time time,
  game_concat varchar, --NBA_LAL_OKC_20241015	-- MLB double header?? "_2"
  h smallint,
  a smallint,
  won_team_id int,
  h1 smallint,  a1 smallint,
  h2 smallint,  a2 smallint,
  h3 smallint,  a3 smallint,
  h4 smallint,  a4 smallint,
  h5 smallint,  a5 smallint,
  h6 smallint,  a6 smallint,
  h7 smallint,  a7 smallint,
  h8 smallint,  a8 smallint,
  h9 smallint,  a9 smallint,
  h10 smallint, a10 smallint,
  is_pre boolean default (false),
  is_post boolean default (false),
  insert_dt timestamp not null default now(),
  update_Dt timestamp,
  source_game_id int
);



CREATE TABLE ball.sched (
  sched_id bigint GENERATED BY DEFAULT AS IDENTITY,
  league_id smallint NOT NULL,
  season_id int NOT NULL,
  team_id int NOT NULL,
  game_num smallint NOT NULL,
  opp_team_id int NOT NULL,
  sched_concat varchar, --NBA_23_24_LAL_###_OKC
  game_dt date,
  home boolean,
  won boolean,
  team smallint,	-- Points
  opp smallint,
  is_pre boolean default (false),
  is_post boolean default (false),
  game_id bigint,	-- Filled in after Sched, ID backfilled  
  insert_dt timestamp not null default now()
);


CREATE TABLE ball.meta (
  meta_id bigint GENERATED BY DEFAULT AS IDENTITY,
  meta_type varchar(100),
  meta_key varchar(100),
  meta_keyid bigint,		-- Used to join to GAME_ID, SCHED_ID
  meta_value varchar,
  meta_source varchar(100),  
  insert_dt timestamp not null default now()
  );


